---
- name: Install sources.list
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
    mode: 0664
    owner: root
    group: root
  tags:
  - apt
  
- name: Install backports.list
  template:
    src: backports.list.j2
    dest: /etc/apt/sources.list.d/backports.list
    mode: 0664
    owner: root
    group: root
  tags:
  - apt
  - backports

- name: Install common packages
  apt:
    name:
    - git
    - htop
    - vim
    - man
    - nmap
    - ncdu
    - rsync
    - screen
    - tmux
    - wget
    - zsh
    - cowsay
    - ntp
    - ranger
    - aptitude
    - pwgen
    - mutt
    state: latest
  tags:
  - packages

- name: Install debsecan
  hosts: all
  become: true
  gather_facts: true

  tasks:
    - name: Ensure debsecan is installed
      apt:
        name: debsecan
        state: present
        update_cache: yes
      register: debsecan_install

    - name: Create output dir
      file:
        path: /var/tmp/debsecan
        state: directory
        mode: 0755

    - name: Run debsecan -> JSON fil bve
      # Using ansible_distribution_release as the suite
      command: >
        debsecan --suite {{ ansible_distribution_release }}
                --format json
      register: debsecan_run
      changed_when: false
      failed_when: debsecan_run.rc not in [0,1] #debsecan will return 1 if no vulnerabilties found

    - name: Save debsecan JSON output to file
      copy:
        content: "{{ debsecan_ru.stdout | default('') }}"
        dest: /var/tmp/debsecan/debsecan--{{ inventory_hostname }}.json
        mode: 0644
    


#- name: Install packages for development
#  apt: name={{ item }} state=latest
#  with_items:
#  - gcc
#  - ruby
#  - ansible
#  - sshpass
#  tags:
#  - packages

#- name: Install ansible config
#  copy: src=ansible.cfg dest=/etc/ansible/ansible.cfg mode=0644 owner=root group=root
#  tags:
#  - ansible

#- name: Add dropbox repo
#  apt_repository: repo='deb http://linux.dropbox.com/ubuntu trusty main' update_cache=yes

#- name: Add dropbox gpg key
#  apt_key: data="{{ lookup('file', 'dropbox.key') }}" 
#
#- name: Force install dropbox
#  apt: name={{ item }} state=latest force=yes
#  with_items:
#  - dropbox
#  tags:
#  - packages
#  - dropbox
#

# Apparently update_cache breaks if you're sudoing and root can't
# CD to the user's home directory (as is the case with our NFS setup)
# -- mhazinsk 2015-06-08

#- name: Apt update
#  apt: update_cache=yes upgrade=yes
#  tags:
#  - apt
#  - packages
