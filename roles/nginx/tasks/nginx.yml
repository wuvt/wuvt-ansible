---
# XXX: this is disabled because it needs to be manually installed from backports
#- name: Install nginx (apt)
#  apt: name=nginx state=latest
#  when: ansible_pkg_mgr == "apt"
#  tags:
#  - packages
#  - web

- name: Copy nginx signing key
  copy: src=nginx_signing.key dest=/etc/pki/rpm-gpg/nginx_signing.key mode=0644
  when: ansible_pkg_mgr == "yum"
  tags:
  - packages
  - web

- name: Copy nginx.repo
  copy: src=yum.repos.d/nginx.repo dest=/etc/yum.repos.d/nginx.repo mode=0644
  when: ansible_pkg_mgr == "yum"
  tags:
  - packages
  - web

- name: Import nginx signing key
  rpm_key: key=/etc/pki/rpm-gpg/nginx_signing.key
  when: ansible_pkg_mgr == "yum"
  tags:
  - packages
  - web

- name: Install nginx (yum)
  yum: name=nginx state=latest
  when: ansible_pkg_mgr == "yum"
  tags:
  - packages
  - web

- name: Create /etc/nginx/sites-available
  file: dest=/etc/nginx/sites-available mode=0755 state=directory
  tags:
  - web

- name: Create /etc/nginx/sites-enabled
  file: dest=/etc/nginx/sites-enabled mode=0755 state=directory
  tags:
  - web

- name: Install /etc/nginx/tls.conf
  template: src=tls.conf.j2 dest=/etc/nginx/tls.conf
  tags:
  - web

- name: Create /etc/nginx/certs
  file: dest=/etc/nginx/certs mode=0700 state=directory
  tags:
  - web

- name: Install upstream CA
  copy: src=upstream-ca.pem dest=/etc/nginx/certs/upstream-ca.pem
  tags:
  - web

- name: Generate dhparam.pem (this may take a while)
  command: /usr/bin/openssl dhparam -out /etc/nginx/certs/dhparam.pem 2048 
           creates=/etc/nginx/certs/dhparam.pem
  tags:
  - web

- name: Set permissions on /etc/nginx/certs/dhparam.pem
  file: dest=/etc/nginx/certs/dhparam.pem mode=0600 state=file
  tags:
  - web

- name: Install nginx.conf
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf
  notify: Reload nginx
  tags:
  - web

- name: Remove /etc/nginx/conf.d/default.conf
  file: dest=/etc/nginx/conf.d/default.conf state=absent
  notify: Reload nginx
  tags:
  - web

- name: Install nginx sites
  copy: src=sites-available/{{ item }}
        dest=/etc/nginx/sites-available/{{ item }}
  with_items: "{{ nginx_sites }}"
  tags:
  - website

- name: Enable nginx sites
  file: src=/etc/nginx/sites-available/{{ item }}
        dest=/etc/nginx/sites-enabled/{{ item }} state=link
  with_items: "{{ nginx_sites }}"
  notify: Reload nginx
  tags:
  - website

- name: Enable nginx service
  service: name=nginx enabled=yes
  tags:
  - services
  - web

- name: Start nginx service
  service: name=nginx state=started
  tags:
  - services
  - web

- name: Open HTTP port in firewalld
  firewalld: service=http immediate=true permanent=true state=enabled
  when: ansible_distribution == "CentOS" and ansible_distribution_version.split(".")[0] == "7"
  tags:
  - firewalld

- name: Open HTTPS port in firewalld
  firewalld: service=https immediate=true permanent=true state=enabled
  when: ansible_distribution == "CentOS" and ansible_distribution_version.split(".")[0] == "7"
  tags:
  - firewalld
